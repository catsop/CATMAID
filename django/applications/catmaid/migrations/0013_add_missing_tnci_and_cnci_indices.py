# -*- coding: utf-8 -*-
# Generated by Django 1.9.9 on 2016-08-17 19:09
from __future__ import unicode_literals

from django.db import migrations

forward = """
    DO
    $$
    BEGIN

    IF NOT EXISTS (
        SELECT *
        FROM pg_class       tab
        JOIN pg_index       idx ON idx.indrelid = tab.oid
        JOIN pg_attribute   col ON col.attrelid = tab.oid

        WHERE tab.oid = 'treenode_class_instance'::regclass
        AND col.attname = 'treenode_id'
        AND idx.indkey::text = col.attnum::text)
    THEN
        CREATE INDEX treenode_class_instance_treenode_id
        ON treenode_class_instance USING btree (treenode_id);
    ELSIF (SELECT to_regclass('treenode_id_index'::cstring)) IS NOT NULL
    THEN
        ALTER INDEX IF EXISTS treenode_id_index
        RENAME TO treenode_class_instance_treenode_id;
    END IF;

    IF NOT EXISTS (
        SELECT *
        FROM pg_class       tab
        JOIN pg_index       idx ON idx.indrelid = tab.oid
        JOIN pg_attribute   col ON col.attrelid = tab.oid

        WHERE tab.oid = 'connector_class_instance'::regclass
        AND col.attname = 'connector_id'
        AND idx.indkey::text = col.attnum::text)
    THEN
        CREATE INDEX connector_class_instance_connector_id
        ON connector_class_instance USING btree (connector_id);
    ELSIF (SELECT to_regclass('connector_id_index'::cstring)) IS NOT NULL
    THEN
        ALTER INDEX IF EXISTS connector_id_index
        RENAME TO connector_class_instance_connector_id;
    END IF;

    END
    $$;
"""

class Migration(migrations.Migration):

    dependencies = [
        ('catmaid', '0012_add_history_views'),
    ]

    operations = [
        migrations.RunSQL(forward, migrations.RunSQL.noop)
    ]
